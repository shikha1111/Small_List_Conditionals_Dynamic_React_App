{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\ALL\\\\lists-conditionals--assignment-problem\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Valid from './Valid/Valid';\nimport Charstyle from './Charstyle/Charstyle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: 'Shikha'\n    };\n\n    this.inputChangedHandler = event => {\n      this.setState({\n        username: event.target.value\n      });\n    };\n  }\n\n  render() {\n    const Characterlist = this.state.username.split('').map((ch, index) => {\n      return /*#__PURE__*/_jsxDEV(Charstyle, {\n        character: ch\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 14\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"ol\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Create an input field (in App component) with a change listener which outputs the length of the entered text below it (e.g. in a paragraph).\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Create a new component (= ValidationComponent) which receives the text length as a prop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Inside the ValidationComponent, either output \\\"Text too short\\\" or \\\"Text long enough\\\" depending on the text length (e.g. take 5 as a minimum length)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Create another component (=CharComponent) and style it as an inline box (=> display: inline-block, padding: 16px, text-align: center, margin: 16px, border: 1px solid black).\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Render a list of CharComponents where each CharComponent receives a different letter of the entered text (in the initial input field) as a prop.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"When you click a CharComponent, it should be removed from the entered text.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hint: Keep in mind that JavaScript strings are basically arrays!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: this.inputChangedHandler,\n        value: this.state.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Valid, {\n        inputlen: this.state.username.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Asus/Desktop/ALL/lists-conditionals--assignment-problem/src/App.js"],"names":["React","Component","Valid","Charstyle","App","state","username","inputChangedHandler","event","setState","target","value","render","Characterlist","split","map","ch","index","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GACpB;AACJC,MAAAA,QAAQ,EAAG;AADP,KADoB;;AAAA,SAK1BC,mBAL0B,GAKHC,KAAD,IAAW;AAC9B,WAAKC,QAAL,CAAc;AAACH,QAAAA,QAAQ,EAACE,KAAK,CAACE,MAAN,CAAaC;AAAvB,OAAd;AACF,KAPyB;AAAA;;AAQ1BC,EAAAA,MAAM,GAAG;AACP,UAAMC,aAAa,GAAE,KAAKR,KAAL,CAAWC,QAAX,CAAoBQ,KAApB,CAA0B,EAA1B,EAA8BC,GAA9B,CAAkC,CAACC,EAAD,EAAKC,KAAL,KAAgB;AACrE,0BAAO,QAAC,SAAD;AAAW,QAAA,SAAS,EAAID;AAAxB,SAAiCC,KAAjC;AAAA;AAAA;AAAA;AAAA,cAAP;AACL,KAFwB,CAArB;AAKA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAUE;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE;AAAO,QAAA,IAAI,EAAC,MAAZ;AACA,QAAA,QAAQ,EAAE,KAAKV,mBADf;AAEA,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC;AAFlB;AAAA;AAAA;AAAA;AAAA,cAZF,eAeE;AAAA,kBAAI,KAAKD,KAAL,CAAWC;AAAf;AAAA;AAAA;AAAA;AAAA,cAfF,eAgBE,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAI,KAAKD,KAAL,CAAWC,QAAX,CAAoBY;AAAvC;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD;;AAnCyB;;AAsC5B,eAAed,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Valid from './Valid/Valid';\nimport Charstyle from './Charstyle/Charstyle';\n\nclass App extends Component {\n  state={\n    username : 'Shikha'\n  }\n\n  inputChangedHandler = (event) => {\n     this.setState({username:event.target.value});\n  }\n  render() {\n    const Characterlist= this.state.username.split('').map((ch, index)  => {\n      return <Charstyle character = {ch} key={index}/>;\n});\n\n\n    return (\n      <div className=\"App\">\n        <ol>\n          <li>Create an input field (in App component) with a change listener which outputs the length of the entered text below it (e.g. in a paragraph).</li>\n          <li>Create a new component (= ValidationComponent) which receives the text length as a prop</li>\n          <li>Inside the ValidationComponent, either output \"Text too short\" or \"Text long enough\" depending on the text length (e.g. take 5 as a minimum length)</li>\n          <li>Create another component (=CharComponent) and style it as an inline box (=> display: inline-block, padding: 16px, text-align: center, margin: 16px, border: 1px solid black).</li>\n          <li>Render a list of CharComponents where each CharComponent receives a different letter of the entered text (in the initial input field) as a prop.</li>\n          <li>When you click a CharComponent, it should be removed from the entered text.</li>\n        </ol>\n        <p>Hint: Keep in mind that JavaScript strings are basically arrays!</p>\n        <hr/>\n        <hr/>\n        <input type=\"text\" \n        onChange={this.inputChangedHandler} \n        value={this.state.username}/>\n        <p>{this.state.username}</p>\n        <Valid inputlen = {this.state.username.length}/>\n      \n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}